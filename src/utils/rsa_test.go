package utils

import (
	"crypto/rsa"
	"crypto/x509"
	"encoding/hex"
	"fmt"
	"os"
	"testing"
)

func TestRsaCreatePrivateKey(t *testing.T) {
	data, pub_data, err := RsaCreatePrivateKeyHex()
	fmt.Println("err", err)
	fmt.Println("priv:", data)
	fmt.Println("pubkey", pub_data)

}
func TestRsaCreatePrivateKeyPem(t *testing.T) {
	data, pub_data, err := RsaCreatePrivateKeyPem()
	fmt.Println("err", err)
	fmt.Println("priv:", data)
	fmt.Println("pubkey", pub_data)

}

func TestRsaReadPEMPublicKey2(t *testing.T) {
	pubkey:="\n-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDEK3wD7Izw4AVaUHQszQkj6F+O\naqbKIfbF8rHL3WdDYxvml8NOJtCk1U+Q/xl9lPERGcfTfFIEoypnOKCg1hryXBXS\nMvwWvfq4H36gXK7p/IfCgV0a+Btv8O/Lw8CuxzuBlYi+GyTg43DRDJyu8lUEFu4u\n4WcGP/20PM7kyetLawIDAQAB\n-----END PUBLIC KEY-----"
	pub, err := RsaReadPEMPublicKey(pubkey)
	if err != "" {
		fmt.Println(err)
	}
	fmt.Println(pub)
}

func TestRsaReadPEMPublicKey(t *testing.T) {
	file, _ := os.Open("D:/EWallet_Platform/public.pem")
	byte_data := make([]byte, 300)
	len, _ := file.Read(byte_data)
	pubkey := string(byte_data[:len])
	pub, err := RsaReadPEMPublicKey(pubkey)
	if err != "" {
		fmt.Println(err)
	}
	fmt.Println(pub)
}

func TestRsaReadPEMPrivateKey(t *testing.T) {
	file, _ := os.Open("D:/EWallet_Platform/private.pem")
	byte_data := make([]byte, 2000)
	len, _ := file.Read(byte_data)
	key := string(byte_data[:len])
	pkey, err := RsaReadPEMPrivateKey(key)
	if err != "" {
		fmt.Println(err)
	}
	fmt.Println(pkey)
}

func TestRsaSignWithSha1Hex(t *testing.T) {
	priv_key := "30820277020100300d06092a864886f70d0101010500048202613082025d02010002818100ece10d27f9eaecbdd5268e865715521c12634c7a1fe70fd4128147f3a5cfc86fd50660266daba2affb760d815cc132a2cafb904bde1c909e12cfa89eaf841abcce1936524c783ce5c6cd8b8b60b47050e14d17a9232e061b21d7b60746780e5bb7142b437ad1867e439deebfb6eea55892d98d95e29c8e2cbfe96a8141962665020301000102818100c3ce000f0471e1c1c558bac56764935beb0333eb5b45a77ad8d50ec1e3550f4d09dcdc4bc7a9f1afe07fa40843c0db775fac7489920f30a7c9cae78a4c71399b32e5c3405bef3ba8ecc09f39ee9444b488ab46bd1db6d35f66b53033d067934a3aa9afe4fe820f7e2877dc570b12139bf67b7ae130012d2166b0d0162cfa0081024100f9da26c8b25c8f508da7fa4961bfe917a9b5f296352f75cb10b52149f5ee4366ba93284a4f62797d748ba968da0bfdff575d3993d8b4888d5e476d2d001134a1024100f2b52e5de3a8c81dccf4cc9f76e9e3b92e1082b0e3e42e26c8a09cfc55151adf5f258440cb2fed1bea4461cd53b5c57e347d5b4be1a9513bf4a0562f45e89745024049cfc1bf6eb9db78dfb06d477a8238794e20bb5ed6ad83ae0eec83be16d261c51a7f58dac323036325a810cf320372f1193d28425e35cf557c31bbb61c9bf8a1024100d31b5cd535ac1d442e7dcf6df4d4c3cad29271dac29e3ab66953aab8a098d6e2ebb38a31818a9246f1a1c120036bdbf84657b30d719f009591d5d4a111c199b1024010dd12bb1707813c3384d18195f346e73640511aa9930945ec49f596a3b5523b913eaff3b87f9b1999a880b777912ebd82fa726cda07e316c4d2a9637b22a8cc"
	sigdata := "user_login,35"
	sig_res, err := RsaSignWithSha1Hex(sigdata, priv_key)
	if err != nil {

		fmt.Println(err)
	}

	fmt.Println(sig_res)
}

func TestRsaSignWithSha1HexLogout(t *testing.T) {
	priv_key := "30820276020100300d06092a864886f70d0101010500048202603082025c02010002818100df2de8dd34663f9619a79b630e9fd1dd3fc693ed02c9d48917f28b14dfdcc05cba60b45857667609e53ad12e8ac1cf4e22dea8f187ef789232d468d9784487f7602d931eb44c654322ddea62190f87146023606db4ce44d31d334cd38b5c5cd1e5d497a168875fdb174ad39ab08086a977dc746a8aa955909f6ab39380aef25b0203010001028180468cafb90570711754e2cbd7036f781af5a72369dfe0c763d30323fe244a1730f8e5cafcc61c28a2362962a8d0ca356b20d0bc1d25f88867c6d3a8955e54639a335880ffa7cc2ed1b29dd6becce8e8cd8de768716c5607d8ee0e05aa1fa9f236420304be68fc8572d4631dbdbf2e841c633e21c95605101efb0c715c21488ee1024100f0739b5e9a2bb76d75b93f5eb657b18f294d71087b182ab195a79f933e97c5ca20281a839506dfb00ad36c80c20ecf740c6096d69ab1ca8e8863b2abe4fb2571024100ed9c617fe8f2e383d49e0261b5fbb09ddb913cffdd1a34313fb0b3a9a3a62e508a2f0b2156c24587a4490351f8ac2c4ade03b4a876f9818acb19c7f80c247e8b0240190d3266ccd1392f2250c6956b91ff61d6ffc68307b020e297a0fb33301647f923188a8aa3003055fb0ac4073630acd47e65a1d182147bf215abad75d349874102402fa126462e9ae992567f69f8ce32ea9f6a10fe0a47f6e5b96d8bed27b71f2baf875390c6990e8e4377620f615218a93444b6b773018e58324b2e1ad0951687ab024100cd1d0774886959bf4fe626377a3f3ceb45b72db26062e450aa3bf86fae11369005b92f3a91d0387910f31e1b51539148fde0906fa9a2faada733400038a2b5fa"
	sigdata := "user_logout,f94d25e0-a46b-48f7-9591-f0b0337a1373"
	sig_res, err := RsaSignWithSha1Hex(sigdata, priv_key)
	if err != nil {

		fmt.Println(err)
	}

	fmt.Println(sig_res)
}

func TestRsaSignWithSha1HexChangeAccountState(t *testing.T) {
	priv_key := "30820276020100300d06092a864886f70d0101010500048202603082025c02010002818100df2de8dd34663f9619a79b630e9fd1dd3fc693ed02c9d48917f28b14dfdcc05cba60b45857667609e53ad12e8ac1cf4e22dea8f187ef789232d468d9784487f7602d931eb44c654322ddea62190f87146023606db4ce44d31d334cd38b5c5cd1e5d497a168875fdb174ad39ab08086a977dc746a8aa955909f6ab39380aef25b0203010001028180468cafb90570711754e2cbd7036f781af5a72369dfe0c763d30323fe244a1730f8e5cafcc61c28a2362962a8d0ca356b20d0bc1d25f88867c6d3a8955e54639a335880ffa7cc2ed1b29dd6becce8e8cd8de768716c5607d8ee0e05aa1fa9f236420304be68fc8572d4631dbdbf2e841c633e21c95605101efb0c715c21488ee1024100f0739b5e9a2bb76d75b93f5eb657b18f294d71087b182ab195a79f933e97c5ca20281a839506dfb00ad36c80c20ecf740c6096d69ab1ca8e8863b2abe4fb2571024100ed9c617fe8f2e383d49e0261b5fbb09ddb913cffdd1a34313fb0b3a9a3a62e508a2f0b2156c24587a4490351f8ac2c4ade03b4a876f9818acb19c7f80c247e8b0240190d3266ccd1392f2250c6956b91ff61d6ffc68307b020e297a0fb33301647f923188a8aa3003055fb0ac4073630acd47e65a1d182147bf215abad75d349874102402fa126462e9ae992567f69f8ce32ea9f6a10fe0a47f6e5b96d8bed27b71f2baf875390c6990e8e4377620f615218a93444b6b773018e58324b2e1ad0951687ab024100cd1d0774886959bf4fe626377a3f3ceb45b72db26062e450aa3bf86fae11369005b92f3a91d0387910f31e1b51539148fde0906fa9a2faada733400038a2b5fa"
	sigdata := "change_acct_state,a52ee326-7809-42a6-8ac3-b09810cae1bf,18,8,1"
	sig_res, err := RsaSignWithSha1Hex(sigdata, priv_key)
	if err != nil {

		fmt.Println(err)
	}

	fmt.Println(sig_res)
}

func TestRsaSignWithSha1HexBackUp(t *testing.T) {
	priv_key := "30820277020100300d06092a864886f70d0101010500048202613082025d02010002818100ece10d27f9eaecbdd5268e865715521c12634c7a1fe70fd4128147f3a5cfc86fd50660266daba2affb760d815cc132a2cafb904bde1c909e12cfa89eaf841abcce1936524c783ce5c6cd8b8b60b47050e14d17a9232e061b21d7b60746780e5bb7142b437ad1867e439deebfb6eea55892d98d95e29c8e2cbfe96a8141962665020301000102818100c3ce000f0471e1c1c558bac56764935beb0333eb5b45a77ad8d50ec1e3550f4d09dcdc4bc7a9f1afe07fa40843c0db775fac7489920f30a7c9cae78a4c71399b32e5c3405bef3ba8ecc09f39ee9444b488ab46bd1db6d35f66b53033d067934a3aa9afe4fe820f7e2877dc570b12139bf67b7ae130012d2166b0d0162cfa0081024100f9da26c8b25c8f508da7fa4961bfe917a9b5f296352f75cb10b52149f5ee4366ba93284a4f62797d748ba968da0bfdff575d3993d8b4888d5e476d2d001134a1024100f2b52e5de3a8c81dccf4cc9f76e9e3b92e1082b0e3e42e26c8a09cfc55151adf5f258440cb2fed1bea4461cd53b5c57e347d5b4be1a9513bf4a0562f45e89745024049cfc1bf6eb9db78dfb06d477a8238794e20bb5ed6ad83ae0eec83be16d261c51a7f58dac323036325a810cf320372f1193d28425e35cf557c31bbb61c9bf8a1024100d31b5cd535ac1d442e7dcf6df4d4c3cad29271dac29e3ab66953aab8a098d6e2ebb38a31818a9246f1a1c120036bdbf84657b30d719f009591d5d4a111c199b1024010dd12bb1707813c3384d18195f346e73640511aa9930945ec49f596a3b5523b913eaff3b87f9b1999a880b777912ebd82fa726cda07e316c4d2a9637b22a8cc"
	sigdata := "backup_db,8a42a8fc-9a46-461a-b43b-0a1fca6e409f,38"
	sig_res, err := RsaSignWithSha1Hex(sigdata, priv_key)
	if err != nil {

		fmt.Println(err)
	}

	fmt.Println(sig_res)
}

func TestRsaVerySignWithSha1Base64(t *testing.T) {
	sigdata := "123456789"
	sig_res := "2ec0850ac7f0d9bf8bb6b9777bac127c10539406d704b7fac129effc6aa30fd74e77591b3260c51447db7e8dbfdf1bd6f54f44e8d32481271d4b46d4d45a685b95c5266410fa54a43704a720ca9a9454b5207b8ea54476f1ca53a1cdc4ffd5c680a4d1138a3f2a186a7a91a715b5f08eb973259288ab0da570394ac614217630"
	priv_key := "30820277020100300d06092a864886f70d0101010500048202613082025d02010002818100b50db122fe8ad0db8c7a11346dac9e00cc870a9438fde7a46488b202390759036af141f8ce8364dd7a730453b8306aeb3a22bc84e19c4767f9a405bce1be4725a05b08a78963dd3f55f5c986eec7a3fa7f8f7d2f28f2a5889c1aa017a8f01171eadcbf69432bc6ef1a217f8e0617e983e7ae7d6fb4b921339925d79a3a5ac883020301000102818100a7cff1074676d3ef2add596506e29ff08da1fd24354ee18d75c15d7cc1ef158a1d6d508094a924ac43faa76011b08ee948113a3ad002520d054e0a236ff935671384c533adb642de4e18b64f61bf3a0c87945aab5257363dc1853352171ed50901992de37913bfe8e88dd9d0eb541d16d81b3ae14e9721e12c655dd64e2eb701024100d972170b3c7dbff05b4c92c44fcbfe5f4699281b83f370eaeb44f97dc66d172cb62133fc6e493a922e78eca89be154277d1f6b012ea19e6a37d8afd3fe846133024100d527c0962f8653b4a90a5cdbabd5999f2069eeb7f39c370e66e27132f9bcd0c47ca356d7ea66089e2859e7f706bb62d7d37035bf07971f059a51eefb7ca69b71024071926b82cce78936cb18e5976f6e46c010a9b20f1d0e2bae278ff117c669f82ebc39ff631b5f581e3df39ef839e2a907af0c97e118300603c8837ee2a50f138d02401d661932dda52a405d9c374878ffc1eb679e14b5bc5ccc5f29238c375aa88726c28608c148ebffbe489475e0e545cd11357161885274ae6ba8682a8cf71947910241008488d4dc934bb87b4e8243da8c1f405bdbfd29c825af6e7fe908d44c391b96eed8d393aaf7d7b08ea407174c350742f4d84e839605323ef53fc61217ee8dac4a"
	priv_data, _ := hex.DecodeString(priv_key)
	key, _ := x509.ParsePKCS8PrivateKey(priv_data)
	public_data := &key.(*rsa.PrivateKey).PublicKey
	der_pub, err := x509.MarshalPKIXPublicKey(public_data)
	if err != nil {
		fmt.Println("public", err.Error())
	}
	public_data_hex := hex.EncodeToString(der_pub)
	fmt.Println("public key", public_data_hex)
	err = RsaVerySignWithSha1Hex(sigdata, sig_res, public_data_hex)
	if err != nil {
		fmt.Println("verify", err.Error())
	} else {
		fmt.Println("verify success")
	}

}
